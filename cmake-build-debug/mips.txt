.data
PrintString2: .asciiz "************************************************"
PrintString1: .asciiz "Start testing switch:"
PrintString0: .asciiz "************************************************"

# const char const_char_2 = '_'
const_char_2: .word 95

# void testSwitch()
.text
j main
testSwitch:

# const int sum = 3
li $t0, 3

# var int int_1

# var int i

# var char char_1

# i = 0
li $t1, 0

# int_1 = 0
li $t2, 0

# LoopSaveRegStatus

# Label_0:
Label_0:

# i < sum

# BZ Label_1
bge $t1, $t0, Label_1

# int_1 == 0

# 

# BZ Label_2
bne $t2, 0, Label_2

# char_1 = 'a'
li $t3, 97

# printf char_1
li $v0, 11
move $a0, $t3
syscall
li $v0, 11
li $a0, 10
syscall

# IfEnd
sw $t3, -4($sp)

# GOTO Label_3
j Label_3

# Label_2:
Label_2:

# ElseBegin

# int_1 == 1

# 

# BZ Label_4
bne $t2, 1, Label_4

# char_1 = 'b'
lw $t4, -4($sp)
li $t4, 98

# printf char_1
li $v0, 11
move $a0, $t4
syscall
li $v0, 11
li $a0, 10
syscall

# IfEnd
sw $t4, -4($sp)

# GOTO Label_5
j Label_5

# Label_4:
Label_4:

# ElseBegin

# char_1 = const_char_2
lw $t5, -4($sp)
la $t6, const_char_2
lw $t6, 0($t6)
move $t5, $t6

# printf char_1
li $v0, 11
move $a0, $t5
syscall
li $v0, 11
li $a0, 10
syscall

# ElseEnd
sw $t5, -4($sp)
la $v1, const_char_2
sw $t6, 0($v1)

# Label_5:
Label_5:

# ElseEnd

# Label_3:
Label_3:

# char_1 == 'a'

# 

# BZ Label_6
lw $t7, -4($sp)
bne $t7, 97, Label_6

# int_1 = i + 1
addi $t2, $t1, 1

# printf int_1
li $v0, 1
move $a0, $t2
syscall
li $v0, 11
li $a0, 10
syscall

# IfEnd
sw $t7, -4($sp)

# GOTO Label_7
j Label_7

# Label_6:
Label_6:

# ElseBegin

# ElseEnd

# Label_7:
Label_7:

# char_1 == 'b'

# 

# BZ Label_8
lw $t8, -4($sp)
bne $t8, 98, Label_8

# int_1 = sum
move $t2, $t0

# printf int_1
li $v0, 1
move $a0, $t2
syscall
li $v0, 11
li $a0, 10
syscall

# IfEnd
sw $t8, -4($sp)

# GOTO Label_9
j Label_9

# Label_8:
Label_8:

# ElseBegin

# ElseEnd

# Label_9:
Label_9:

# i = i + 1
addi $t1, $t1, 1

# LoopRestoreRegStatus

# GOTO Label_0
j Label_0

# Label_1:
Label_1:

# LoopEnd

# ret 
jr $ra

# void main()
main:

# printf "************************************************"
la $a0, PrintString0
li $v0, 4
syscall
li $v0, 11
li $a0, 10
syscall

# printf "Start testing switch:"
la $a0, PrintString1
li $v0, 4
syscall
li $v0, 11
li $a0, 10
syscall

# SaveEnvironment
sw $ra, 0($sp)

# call testSwitch
subi $sp, $sp, 4
jal testSwitch

# RestoreEnvironment
addi $sp, $sp, 4
lw $ra, 0($sp)

# printf "************************************************"
la $a0, PrintString2
li $v0, 4
syscall
li $v0, 11
li $a0, 10
syscall

# Exit
li $v0, 10
syscall
