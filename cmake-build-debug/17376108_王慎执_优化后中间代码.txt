const int const_int_1 = 12345679
const int const_int_2 = 0
const int const_int_3 = -0
const int const_int_4 = -12345679
const char const_char_1 = '9'
const char const_char_2 = '_'
const char const_char_3 = '+'
const char const_char_4 = '*'
var int global_int_array_1[5]
var int global_int_1
var char global_char_array_1[5]
var char global_char_1
var int global_int_2
var int global_int_array_2[5]
var char global_char_2
var char global_char_array_2[5]
var char global_char_array_3[10]
void hanoi()
para int n
para char from
para char tmp
para char to
n > 0
IfBegin
BZ Label_0
t6 = n - 1
push t6
push from
push to
push tmp
SaveEnvironment
call hanoi
RestoreEnvironment
printf "take"
printf n
printf "from"
printf from
printf "to"
printf to
t29 = n - 1
push t29
push tmp
push from
push to
SaveEnvironment
call hanoi
RestoreEnvironment
IfRestoreRegs
Label_0:
IfEnd
ret 
int Fibonacci()
para int n
n == 0
IfBegin
BZ Label_2
ret 0
IfRestoreRegs
Label_2:
IfEnd
n == 1
IfBegin
BZ Label_4
ret 1
IfRestoreRegs
Label_4:
IfEnd
t65 = n - 1
push t65
SaveEnvironment
call Fibonacci
RestoreEnvironment
t61 = RET
t73 = n - 2
push t73
SaveEnvironment
call Fibonacci
RestoreEnvironment
t70 = RET
t61 = t61 + t70
ret t61
int fac()
para int n
n == 1
IfBegin
BZ Label_6
ret 1
IfRestoreRegs
Label_6:
IfEnd
t88 = n
t92 = n - 1
push t92
SaveEnvironment
call fac
RestoreEnvironment
t90 = RET
t87 = t88 * t90
ret t87
void initGlobalArray()
global_int_array_1[0] = 0
global_int_array_1[1] = 1
t114 = global_int_array_1[0]
t119 = global_int_array_1[1]
t112 = t114 + t119
global_int_array_1[2] = t112
t128 = global_int_array_1[2]
t133 = global_int_array_1[1]
t126 = t128 + t133
global_int_array_1[3] = t126
t142 = global_int_array_1[3]
t147 = global_int_array_1[2]
t140 = t142 + t147
global_int_array_1[4] = t140
t156 = global_int_array_1[1]
global_int_array_2[0] = t156
t165 = global_int_array_2[0]
t169 = global_int_array_1[2]
t163 = t165 * t169
global_int_array_2[1] = t163
t178 = global_int_array_2[1]
t182 = global_int_array_1[3]
t176 = t178 * t182
global_int_array_2[2] = t176
t191 = global_int_array_2[2]
t195 = global_int_array_1[4]
t189 = t191 * t195
global_int_array_2[3] = t189
t204 = global_int_array_2[3]
t208 = global_int_array_1[4]
t202 = t204 / t208
global_int_array_2[4] = t202
global_char_array_1[0] = 'a'
global_char_array_1[1] = 'A'
global_char_array_1[2] = 'z'
global_char_array_1[3] = 'Z'
global_char_array_1[4] = '_'
global_char_array_2[0] = '+'
global_char_array_2[1] = '-'
global_char_array_2[2] = '*'
global_char_array_2[3] = '/'
global_char_array_2[4] = '6'
ret 
void assignGlobal()
para int a
para char b
para int c
para char d
global_int_1 = a
global_char_1 = b
global_int_2 = c
global_char_2 = d
ret 
void printGlobalConst()
printf const_int_1
printf const_int_2
printf const_int_3
printf const_int_4
printf const_char_1
printf const_char_2
printf const_char_3
printf const_char_4
ret 
void printGlobalVar()
printf global_int_1
printf global_int_2
printf global_char_1
printf global_char_2
ret 
void printGlobalArray()
t322 = global_int_array_1[0]
printf t322
t328 = global_int_array_1[1]
printf t328
t334 = global_int_array_1[2]
printf t334
t340 = global_int_array_1[3]
printf t340
t346 = global_int_array_1[4]
printf t346
t352 = global_int_array_2[0]
printf t352
t358 = global_int_array_2[1]
printf t358
t364 = global_int_array_2[2]
printf t364
t370 = global_int_array_2[3]
printf t370
t376 = global_int_array_2[4]
printf t376
t382 = global_char_array_1[0]
printf t382
t388 = global_char_array_1[1]
printf t388
t394 = global_char_array_1[2]
printf t394
t400 = global_char_array_1[3]
printf t400
t406 = global_char_array_1[4]
printf t406
t412 = global_char_array_2[0]
printf t412
t418 = global_char_array_2[1]
printf t418
t424 = global_char_array_2[2]
printf t424
t430 = global_char_array_2[3]
printf t430
t436 = global_char_array_2[4]
printf t436
ret 
void testGlobal()
SaveEnvironment
call initGlobalArray
RestoreEnvironment
push const_int_1
push const_char_1
push const_int_4
push const_char_4
SaveEnvironment
call assignGlobal
RestoreEnvironment
SaveEnvironment
call printGlobalConst
RestoreEnvironment
SaveEnvironment
call printGlobalVar
RestoreEnvironment
SaveEnvironment
call printGlobalArray
RestoreEnvironment
ret 
int testReturnInt()
para int a
t452 = a + 1
ret t452
char testReturnChar()
para int a
a == 1
IfBegin
BZ Label_8
ret 'a'
IfRestoreRegs
Label_8:
IfEnd
a == 2
IfBegin
BZ Label_10
ret 'b'
IfRestoreRegs
Label_10:
IfEnd
a == 3
IfBegin
BZ Label_12
ret 'c'
IfRestoreRegs
Label_12:
IfEnd
ret '_'
void testReturn()
push 3
SaveEnvironment
call fac
RestoreEnvironment
t495 = RET
push 2
SaveEnvironment
call fac
RestoreEnvironment
t502 = RET
t495 = t495 + t502
push t495
SaveEnvironment
call Fibonacci
RestoreEnvironment
t491 = RET
push t491
SaveEnvironment
call testReturnInt
RestoreEnvironment
t487 = RET
printf t487
push 1
SaveEnvironment
call testReturnChar
RestoreEnvironment
t508 = RET
printf t508
push 2
SaveEnvironment
call testReturnChar
RestoreEnvironment
t515 = RET
printf t515
push 3
SaveEnvironment
call testReturnChar
RestoreEnvironment
t522 = RET
printf t522
push 4
SaveEnvironment
call testReturnChar
RestoreEnvironment
t529 = RET
printf t529
ret 
void testAssignAndExp()
const int const_int_1 = 1
const int const_int_2 = -1
const int const_int_3 = 0
const char const_char_1 = 'a'
const char const_char_2 = 'A'
const char const_char_3 = 'b'
var int int_temp_1
var int int_temp_2
var int int_array[2]
var int int_temp_3
var char char_temp_1
var char char_array[2]
var char char_temp_2
t536 = const_int_1
push 5
SaveEnvironment
call Fibonacci
RestoreEnvironment
t549 = RET
push t549
SaveEnvironment
call Fibonacci
RestoreEnvironment
t545 = RET
push t545
SaveEnvironment
call Fibonacci
RestoreEnvironment
t541 = RET
t558 = const_int_2 * const_int_4
t556 = const_int_1 / t558
t539 = t541 + t556
push 3
SaveEnvironment
call fac
RestoreEnvironment
t563 = RET
t539 = t539 / t563
int_temp_1 = t536 + t539
push 3
SaveEnvironment
call fac
RestoreEnvironment
t572 = RET
push 2
SaveEnvironment
call fac
RestoreEnvironment
t579 = RET
t572 = t572 + t579
push t572
SaveEnvironment
call fac
RestoreEnvironment
int_temp_2 = RET
t585 = const_int_3
push 0
SaveEnvironment
call testReturnInt
RestoreEnvironment
t588 = RET
int_array[t585] = t588
t595 = const_int_1
t600 = const_int_2 * const_int_4
push 0
SaveEnvironment
call testReturnInt
RestoreEnvironment
t604 = RET
t604 = t604 * const_int_4
t598 = t600 + t604
t595 = t595 - t598
t611 = const_int_1
push const_int_1
SaveEnvironment
call testReturnInt
RestoreEnvironment
t614 = RET
t611 = t611 + t614
int_array[t595] = t611
t622 = int_array[const_int_3]
t620 = t622
t631 = const_int_1
t636 = const_int_2 * const_int_4
push 0
SaveEnvironment
call testReturnInt
RestoreEnvironment
t640 = RET
t640 = t640 * const_int_4
t634 = t636 + t640
t631 = t631 - t634
t630 = int_array[t631]
t647 = 'b' - 'a'
t626 = t630 * t647
int_temp_3 = t620 - t626
t653 = 0
t662 = int_array[0]
push t662
SaveEnvironment
call testReturnChar
RestoreEnvironment
t656 = RET
char_array[t653] = t656
t666 = const_int_1
t671 = const_int_2 * const_int_4
push 0
SaveEnvironment
call testReturnInt
RestoreEnvironment
t675 = RET
t675 = t675 * const_int_4
t669 = t671 + t675
t666 = t666 - t669
t688 = int_array[1]
t686 = t688 + const_int_1
push t686
SaveEnvironment
call testReturnChar
RestoreEnvironment
t682 = RET
char_array[t666] = t682
t696 = char_array[0]
char_temp_1 = t696
t703 = const_int_1
t708 = const_int_2 * const_int_4
push 0
SaveEnvironment
call testReturnInt
RestoreEnvironment
t712 = RET
t712 = t712 * const_int_4
t706 = t708 + t712
t703 = t703 - t706
t702 = char_array[t703]
char_temp_2 = t702
printf int_temp_1
printf int_temp_2
printf int_temp_3
t730 = int_array[const_int_3]
printf t730
t737 = const_int_1
t742 = const_int_2 * const_int_4
push 0
SaveEnvironment
call testReturnInt
RestoreEnvironment
t746 = RET
t746 = t746 * const_int_4
t740 = t742 + t746
t737 = t737 - t740
t736 = int_array[t737]
printf t736
printf char_temp_1
printf char_temp_2
t761 = char_array[0]
printf t761
t767 = char_array[const_int_1]
printf t767
t777 = char_array[0]
t782 = char_array[0]
t781 = t782 * char_temp_2
t774 = t777 + t781
t771 = char_temp_1 * t774
printf t771
ret 
void testIO()
scanf global_int_1
scanf global_char_1
printf "!@\n#$^&*()Qqaa123[];',./"
printf global_int_1
printf global_char_1
scanf global_int_1 global_char_1
printf "!@\n#$^&*()Qqaa123[];',./" global_int_1
printf global_char_1
scanf global_char_1 global_int_1
printf "!@\n#$^&*()Qqaa123[];',./" global_char_1
printf global_int_1
ret 
void testIfWhile()
var int i
var int j
var int k
var char a
var char b
var char c
var char d
k = 10
a = '+'
b = '-'
c = '*'
d = '/'
k > 0
IfBegin
BZ Label_14
k <= 10
IfBegin
BZ Label_16
i = 0
LoopSaveRegStatus
Label_18:
t838 = k / 2
i < t838
BZ Label_19
t851 = i / 2
t848 = t851 * 2
t842 = i - t848
t842 == 0
IfBegin
BZ Label_20
global_char_array_3[i] = a
IfRestoreRegs
Label_20:
IfEnd
t873 = i / 2
t870 = t873 * 2
t864 = i - t870
t864 == 1
IfBegin
BZ Label_22
global_char_array_3[i] = b
IfRestoreRegs
Label_22:
IfEnd
t888 = global_char_array_3[i]
printf t888
i = i + 1
LoopRestoreRegStatus
GOTO Label_18
Label_19:
LoopEnd
LoopSaveRegStatus
Label_24:
i < k
BZ Label_25
t912 = i / 2
t909 = t912 * 2
t903 = i - t909
t903 == 0
IfBegin
BZ Label_26
global_char_array_3[i] = c
GOTO Label_27
Label_26:
ElseBegin
global_char_array_3[i] = d
ElseEnd
Label_27:
t933 = global_char_array_3[i]
printf t933
i = i + 1
LoopRestoreRegStatus
GOTO Label_24
Label_25:
LoopEnd
IfRestoreRegs
Label_16:
IfEnd
IfRestoreRegs
Label_14:
IfEnd
ret 
void testSwitch()
const int sum = 3
var int int_1
var int i
var char char_1
i = 0
int_1 = 0
LoopSaveRegStatus
Label_28:
i < sum
BZ Label_29
int_1 == 0
IfBegin
BZ Label_30
char_1 = 'a'
printf char_1
GOTO Label_31
Label_30:
ElseBegin
int_1 == 1
IfBegin
BZ Label_32
char_1 = 'b'
printf char_1
GOTO Label_33
Label_32:
ElseBegin
char_1 = const_char_2
printf char_1
ElseEnd
Label_33:
ElseEnd
Label_31:
char_1 == 'a'
IfBegin
BZ Label_34
int_1 = i + 1
printf int_1
IfRestoreRegs
Label_34:
IfEnd
char_1 == 'b'
IfBegin
BZ Label_36
int_1 = sum
printf int_1
IfRestoreRegs
Label_36:
IfEnd
i = i + 1
LoopRestoreRegStatus
GOTO Label_28
Label_29:
LoopEnd
ret 
int func_ret_int_1()
para int i_1
para int i_2
para char c_1
para char c_2
var int i_temp
var char c_temp
printf "INPUT of func_ret_int_1:"
printf i_1
printf i_2
printf c_1
printf c_2
printf "OPERATE of func_ret_int_1:"
printf i_2
printf i_1
printf c_2
printf c_1
ret i_2
void testPara()
var int i
var int j
var char c
var char d
push const_int_1
push const_int_4
push 'A'
push 'Z'
SaveEnvironment
call func_ret_int_1
RestoreEnvironment
t1084 = RET
printf t1084
ret 
void testRecursion()
push 2
SaveEnvironment
call fac
RestoreEnvironment
t1108 = RET
push 3
SaveEnvironment
call fac
RestoreEnvironment
t1114 = RET
t1107 = t1108 * t1114
push t1107
SaveEnvironment
call Fibonacci
RestoreEnvironment
t1103 = RET
push 3
SaveEnvironment
call Fibonacci
RestoreEnvironment
t1122 = RET
push 4
SaveEnvironment
call Fibonacci
RestoreEnvironment
t1129 = RET
t1122 = t1122 + t1129
push t1122
SaveEnvironment
call fac
RestoreEnvironment
t1119 = RET
t1101 = t1103 - t1119
push 2
SaveEnvironment
call Fibonacci
RestoreEnvironment
t1137 = RET
push 3
SaveEnvironment
call Fibonacci
RestoreEnvironment
t1144 = RET
t1137 = t1137 + t1144
push t1137
SaveEnvironment
call fac
RestoreEnvironment
t1135 = RET
t1100 = t1101 / t1135
push t1100
push 'a'
push 'b'
push 'c'
SaveEnvironment
call hanoi
RestoreEnvironment
ret 
void main()
printf "************************************************"
printf "Start testing recursion:"
SaveEnvironment
call testRecursion
RestoreEnvironment
printf "************************************************"
printf "Start testing global:"
SaveEnvironment
call testGlobal
RestoreEnvironment
printf "************************************************"
printf "Start testing return:"
SaveEnvironment
call testReturn
RestoreEnvironment
printf "************************************************"
printf "Start testing I/O:"
SaveEnvironment
call testIO
RestoreEnvironment
printf "************************************************"
printf "Start testing assign & exp:"
SaveEnvironment
call testAssignAndExp
RestoreEnvironment
printf "************************************************"
printf "Start testing if & while:"
SaveEnvironment
call testIfWhile
RestoreEnvironment
printf "************************************************"
printf "Start testing switch:"
SaveEnvironment
call testSwitch
RestoreEnvironment
printf "************************************************"
printf "Start testing parameter:"
SaveEnvironment
call testPara
RestoreEnvironment
printf "************************************************"
Exit
